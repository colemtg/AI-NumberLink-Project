val mutable thetimes :
  (int * (int * int * int * float) * (int * int * int * float)) list =
  [(11, (-69, 0, 0, 100012.9841), (-69, 0, 0, 100002.9496));
   (11, (-69, 0, 0, 100000.2362), (-69, 0, 0, 100000.3305));
   (11, (-69, 0, 0, 0.1113), (-69, 0, 0, 0.0695));
   (11, (-69, 0, 0, 100000.4987), (-69, 0, 0, 100000.5847));
   (11, (-69, 0, 0, 100000.1513), (-69, 0, 0, 100000.2466));
   (11, (-69, 0, 0, 100003.3219), (-69, 0, 0, 100000.384));
   (11, (-69, 0, 0, 100000.1436), (-69, 0, 0, 100000.1158));
   (11, (-69, 0, 0, 100000.7543), (-69, 0, 0, 100000.116));
   (11, (-69, 0, 0, 100000.9036), (-69, 0, 0, 100001.8935));
   (11, (-69, 0, 0, 100000.0831), (-69, 0, 0, 100000.2223));
   (11, (-69, 0, 0, 100000.6991), (-69, 0, 0, 100002.6657));
   (11, (-69, 0, 0, 100002.85), (-69, 0, 0, 100007.3873));
   (11, (-69, 0, 0, 100002.2868), (-69, 0, 0, 100001.8769));
   (11, (-69, 0, 0, 100001.1521), (-69, 0, 0, 100004.3272));
   (11, (-69, 0, 0, 100000.1345), (-69, 0, 0, 100000.2347));
   (11, (-69, 0, 0, 100000.1038), (-69, 0, 0, 100000.3841));
   (11, (-69, 0, 0, 100000.1006), (-69, 0, 0, 100000.1728));
   (11, (-69, 0, 0, 100003.4902), (-69, 0, 0, 100000.6594));
   (11, (-69, 0, 0, 100000.1417), (-69, 0, 0, 100001.9445));
   (11, (-69, 0, 0, 100000.1505), (-69, 0, 0, 100000.3565));
   (11, (-69, 0, 0, 100000.132), (-69, 0, 0, 100000.1911));
   (11, (-69, 0, 0, 100000.1281), (-69, 0, 0, 100000.268));
   (11, (-69, 0, 0, 100000.5903), (-69, 0, 0, 100000.169));
   (11, (-69, 0, 0, 100000.0984), (-69, 0, 0, 100000.238));
   (11, (-69, 0, 0, 100002.7644), (-69, 0, 0, 100000.1271));
   (11, (-69, 0, 0, 100000.0955), (-69, 0, 0, 100002.3872));
   (11, (-69, 0, 0, 100000.1071), (-69, 0, 0, 100000.2366));
   (11, (-69, 0, 0, 100000.0987), (-69, 0, 0, 100010.4853));
   (11, (-69, 0, 0, 100000.1187), (-69, 0, 0, 100000.225));
   (11, (-69, 0, 0, 100001.584), (-69, 0, 0, 100000.383));
   (11, (-69, 0, 0, 100000.1297), (-69, 0, 0, 100000.6356));
   (11, (-69, 0, 0, 100000.0873), (-69, 0, 0, 100000.1955));
   (11, (-69, 0, 0, 100000.0954), (-69, 0, 0, 100000.2465));
   (11, (-69, 0, 0, 100000.0864), (-69, 0, 0, 100000.1622));
   (11, (-69, 0, 0, 100000.1018), (-69, 0, 0, 100000.1471));
   (11, (-69, 0, 0, 100000.3245), (-69, 0, 0, 100000.4991));
   (11, (-69, 0, 0, 100000.1986), (-69, 0, 0, 100001.8973));
   (11, (-69, 0, 0, 100000.3519), (-69, 0, 0, 100000.2179));
   (11, (-69, 0, 0, 100001.9483), (-69, 0, 0, 100001.7384));
   (11, (-69, 0, 0, 100000.1153), (-69, 0, 0, 100000.818));
   (11, (-69, 0, 0, 100001.3041), (-69, 0, 0, 100002.9299));
   (11, (-69, 0, 0, 100000.7026), (-69, 0, 0, 100000.1825));
   (11, (-69, 0, 0, 100002.102), (-69, 0, 0, 100000.0878));
   (11, (-69, 0, 0, 100001.0048), (-69, 0, 0, 100000.1118));
   (11, (-69, 0, 0, 100001.3676), (-69, 0, 0, 100000.5074));
   (11, (-69, 0, 0, 100001.2559), (-69, 0, 0, 100000.1663));
   (11, (-69, 0, 0, 100001.1255), (-69, 0, 0, 100001.6639));
   (11, (-69, 0, 0, 100000.0951), (-69, 0, 0, 100000.2678));
   (11, (-69, 0, 0, 100002.7223), (-69, 0, 0, 100000.7038));
   (11, (-69, 0, 0, 100007.6974), (-69, 0, 0, 100002.9577));
   (11, (-69, 0, 0, 100004.4514), (-69, 0, 0, 100000.4293));
   (11, (-69, 0, 0, 100000.3025), (-69, 0, 0, 100002.3002));
   (11, (-69, 0, 0, 100000.0996), (-69, 0, 0, 100000.2981));
   (11, (-69, 0, 0, 100000.1124), (-69, 0, 0, 100000.1569));
   (11, (-69, 0, 0, 100001.2095), (-69, 0, 0, 100002.2242))]
